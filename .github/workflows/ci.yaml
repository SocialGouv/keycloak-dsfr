name: ci
on:
  push:
    branches:
      - main
      - dsfr
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.name != 'actions'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2.1.3
      with:
        node-version: '14'
    - uses: bahmutov/npm-install@v1
    #- run: yarn test
    - run: yarn build
    - run: npx build-keycloak-theme --external-assets
    - uses: actions/upload-artifact@v2
      with:
        name: keycloak_theme
        path: build_keycloak/target/*keycloak-theme*.jar
    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: build

  check_if_version_upgraded:
    name: Check if version upgrade
    runs-on: ubuntu-latest
    needs: build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
    steps:
    - uses: garronej/github_actions_toolkit@v2.2
      id: step1
      with: 
        action_name: is_package_json_version_upgraded

  github_pages:
    runs-on: ubuntu-latest
    needs: 
      - check_if_version_upgraded
      - build
    # We publish the the docker image only if it's a push on the default branch or if it's a PR from a 
    # branch (meaning not a PR from a fork). It would be more straightforward to test if secrets.DOCKERHUB_TOKEN is 
    # defined but GitHub Action don't allow it.
    if: |
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
      github.event_name == 'push' || 
      github.event.pull_request.head.repo.owner.login == github.event.pull_request.base.repo.owner.login 
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - uses: actions/setup-node@v2.1.3
      with:
        node-version: '15'
    - run: git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${{github.repository}}.git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: npx -y -p gh-pages@3.1.0 gh-pages -d build -u "github-actions-bot <actions@github.com>"

  update_changelog:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    needs:
      - docker
    steps:
    - uses: garronej/github_actions_toolkit@v2.4
      with:
        action_name: update_changelog
        branch: ${{ github.ref }}

  release:
    runs-on: ubuntu-latest
    needs: 
      - update_changelog
      - check_if_version_upgraded
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - uses: actions/download-artifact@v2
      with:
        name: keycloak_theme
    - run: mv *keycloak-theme*.jar keycloak-theme.jar
    - name: Build GitHub release body
      id: step1
      run: |
        if [ "$FROM_VERSION" = "0.0.0" ]; then
            echo "::set-output name=body::ðŸš€"
        else
            echo "::set-output name=body::ðŸ“‹ [CHANGELOG](https://github.com/$GITHUB_REPOSITORY/blob/v$TO_VERSION/CHANGELOG.md)"
        fi
      env: 
        FROM_VERSION: ${{ needs.check_if_version_upgraded.outputs.from_version }}
        TO_VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
    - uses: garronej/action-gh-release@v0.2.0
      with:
        name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
        tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
        target_commitish: ${{ github.ref }}
        files: keycloak-theme.jar
        body: ${{ steps.step1.outputs.body }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
